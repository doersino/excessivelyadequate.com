/* matches sublime text's mariana color scheme (as of 2024-10ish) reasonably closely */
/* originally adapted from https://github.com/richleland/pygments-css/blob/master/default.css */

:root {
    /* mariana colors */
    --cc-mariana-black: hsl(0, 0%, 0%);
    --cc-mariana-blue: hsl(210, 50%, 60%);
    --cc-mariana-blue-vibrant: hsl(210, 60%, 60%);
    --cc-mariana-blue2: hsla(210, 13%, 40%, 0.7);
    --cc-mariana-blue3: hsl(210, 15%, 22%);
    --cc-mariana-blue4: hsl(210, 13%, 45%);
    --cc-mariana-blue5: hsl(180, 36%, 54%);
    --cc-mariana-blue6: hsl(221, 12%, 69%);
    --cc-mariana-green: hsl(114, 31%, 68%);
    --cc-mariana-grey: hsl(0, 0%, 20%);
    --cc-mariana-orange: hsl(32, 93%, 66%);
    --cc-mariana-orange2: hsl(32, 85%, 55%);
    --cc-mariana-orange3: hsl(40, 94%, 68%);
    --cc-mariana-pink: hsl(300, 30%, 68%);
    --cc-mariana-red: hsl(357, 79%, 65%);
    --cc-mariana-red2: hsl(13, 93%, 66%);
    --cc-mariana-white: hsl(0, 0%, 100%);
    --cc-mariana-white2: hsl(0, 0%, 97%);
    --cc-mariana-white3: hsl(219, 28%, 88%);
    --cc-mariana-white3-brighter: hsl(219, 28%, 93%);  /* non-standard */

    /* basic colors (abstracted from below, which originally were standard pygments-css/rougify colors) */
    --cc-comment: var(--cc-mariana-blue6);
    --cc-commentpreproc: var(--cc-mariana-blue5);
    --cc-keyword-name-string: var(--cc-mariana-pink);
    --cc-string: var(--cc-mariana-green);
    --cc-operator: var(--cc-mariana-red2);
    --cc-number: var(--cc-mariana-orange);
    --cc-error: var(--cc-mariana-red);
    --cc-variable: var(--cc-mariana-red);
    --cc-namespace-class-function: var(--cc-mariana-blue);
    --cc-label: var(--cc-mariana-orange);
    --cc-decorator: inherit;
    --cc-constant: var(--cc-mariana-blue);
    --cc-type: var(--cc-mariana-red);
    --cc-operatorword: var(--cc-mariana-red2);
    --cc-whitespace: var(--cc-mariana-blue2);
    --cc-regex: var(--cc-mariana-red2);
    --cc-escape: var(--cc-mariana-orange3);
    --cc-output: inherit;
    --cc-heading-prompt: inherit;
    --cc-subheading: inherit;
    --cc-traceback: inherit;
    --cc-attribute: inherit;
    --cc-entity: var(--cc-mariana-blue-vibrant);
    --cc-deleted: var(--cc-mariana-red2);
    --cc-inserted: var(--cc-mariana-green);
}

/* Highlight */                     .highlight .hll { background-color: var(--cc-mariana-blue2) }
/* Comment */                       .highlight .c { color: var(--cc-comment); font-style: italic } 
/* Comment */                       .highlight .cd { color: var(--cc-comment); font-style: italic } 
/* Error */                         .highlight .err { border: 1px solid var(--cc-error); border-radius: 2px } 
/* Keyword */                       .highlight .k { color: var(--cc-keyword-name-string) } 
/* Operator */                      .highlight .o { color: var(--cc-operator) } 
/* Comment.Hashbang */              .highlight .ch { color: var(--cc-comment); font-style: italic } 
/* Comment.Multiline */             .highlight .cm { color: var(--cc-comment); font-style: italic } 
/* Comment.Preproc */               .highlight .cp { color: var(--cc-commentpreproc) } 
/* Comment.PreprocFile */           .highlight .cpf { color: var(--cc-comment); font-style: italic } 
/* Comment.Single */                .highlight .c1 { color: var(--cc-comment); font-style: italic } 
/* Comment.Special */               .highlight .cs { color: var(--cc-comment); font-style: italic } 
/* Generic.Deleted */               .highlight .gd { color: var(--cc-deleted) } 
/* Generic.Emph */                  .highlight .ge { font-style: italic } 
/* Generic.Error */                 .highlight .gr { color: var(--cc-error) } 
/* Generic.Heading */               .highlight .gh { color: var(--cc-heading-prompt); font-weight: bold } 
/* Generic.Inserted */              .highlight .gi { color: var(--cc-inserted) } 
/* Generic.Output */                .highlight .go { color: var(--cc-output) } 
/* Generic.Prompt */                .highlight .gp { color: var(--cc-heading-prompt); font-weight: bold } 
/* Generic.Strong */                .highlight .gs { font-weight: bold } 
/* Generic.Subheading */            .highlight .gu { color: var(--cc-subheading); font-weight: bold } 
/* Generic.Traceback */             .highlight .gt { color: var(--cc-traceback) } 
/* Keyword.Constant */              .highlight .kc { color: var(--cc-keyword-name-string) } 
/* Keyword.Declaration */           .highlight .kd { color: var(--cc-keyword-name-string) } 
/* Keyword.Namespace */             .highlight .kn { color: var(--cc-keyword-name-string) } 
/* Keyword.Pseudo */                .highlight .kp { color: var(--cc-keyword-name-string) } 
/* Keyword.Reserved */              .highlight .kr { color: var(--cc-keyword-name-string) } 
/* Keyword.Type */                  .highlight .kt { color: var(--cc-type) } 
/* Literal.Number */                .highlight .m { color: var(--cc-number) } 
/* Literal.String */                .highlight .s { color: var(--cc-string) } 
/* Name.Attribute */                .highlight .na { color: var(--cc-attribute) } 
/* Name.Builtin */                  .highlight .nb { color: var(--cc-keyword-name-string) } 
/* Name.Class */                    .highlight .nc { color: var(--cc-namespace-class-function) } 
/* Name.Constant */                 .highlight .no { color: var(--cc-constant) } 
/* Name.Decorator */                .highlight .nd { color: var(--cc-decorator) } 
/* Name.Entity */                   .highlight .ni { color: var(--cc-entity) } 
/* Name.Exception */                .highlight .ne { color: var(--cc-error) } 
/* Name.Function */                 .highlight .nf { color: var(--cc-namespace-class-function) } 
/* Name.Label */                    .highlight .nl { color: var(--cc-label) } 
/* Name.Namespace */                .highlight .nn { color: var(--cc-namespace-class-function) } 
/* Name.Tag */                      .highlight .nt { color: var(--cc-keyword-name-string) } 
/* Name.Variable */                 .highlight .nv { color: var(--cc-variable) } 
/* Operator.Word */                 .highlight .ow { color: var(--cc-operatorword) } 
/* Text.Whitespace */               .highlight .w { color: var(--cc-whitespace) } 
/* Literal.Number.Bin */            .highlight .mb { color: var(--cc-number) } 
/* Literal.Number.Float */          .highlight .mf { color: var(--cc-number) } 
/* Literal.Number.Hex */            .highlight .mh { color: var(--cc-number) } 
/* Literal.Number.Integer */        .highlight .mi { color: var(--cc-number) } 
/* Literal.Number.Oct */            .highlight .mo { color: var(--cc-number) } 
/* Literal.String.Affix */          .highlight .sa { color: var(--cc-string) } 
/* Literal.String.Backtick */       .highlight .sb { color: var(--cc-string) } 
/* Literal.String.Char */           .highlight .sc { color: var(--cc-string) } 
/* Literal.String.Delimiter */      .highlight .dl { color: var(--cc-string) } 
/* Literal.String.Doc */            .highlight .sd { color: var(--cc-string); font-style: italic } 
/* Literal.String.Double */         .highlight .s2 { color: var(--cc-string) } 
/* Literal.String.Escape */         .highlight .se { color: var(--cc-escape) } 
/* Literal.String.Heredoc */        .highlight .sh { color: var(--cc-string) } 
/* Literal.String.Interpol */       .highlight .si { color: var(--cc-regex) } 
/* Literal.String.Other */          .highlight .sx { color: var(--cc-keyword-name-string) } 
/* Literal.String.Regex */          .highlight .sr { color: var(--cc-regex) } 
/* Literal.String.Single */         .highlight .s1 { color: var(--cc-string) } 
/* Literal.String.Symbol */         .highlight .ss { color: var(--cc-variable) } 
/* Name.Builtin.Pseudo */           .highlight .bp { color: var(--cc-keyword-name-string) } 
/* Name.Function.Magic */           .highlight .fm { color: var(--cc-namespace-class-function) } 
/* Name.Variable.Class */           .highlight .vc { color: var(--cc-variable) } 
/* Name.Variable.Global */          .highlight .vg { color: var(--cc-variable) } 
/* Name.Variable.Instance */        .highlight .vi { color: var(--cc-variable) } 
/* Name.Variable.Magic */           .highlight .vm { color: var(--cc-variable) } 
/* Literal.Number.Integer.Long */   .highlight .il { color: var(--cc-number) } 
